# Ansible Configuration

[defaults]
# (pathspec) Colon separated paths in which Ansible will search for Become Plugins.
become_plugins=plugins/become

# (string) Chooses which cache plugin to use, the default 'memory' is ephemeral.
;fact_caching=memory
fact_caching=jsonfile

# (string) Defines connection or path information for the cache plugin
;fact_caching_connection=
fact_caching_connection=facts.json

# (string) Prefix to use for cache plugin files/tables
;fact_caching_prefix=ansible_facts
fact_caching_prefix=ansible_facts

# (integer) Expiration timeout for the cache plugin data
;fact_caching_timeout=86400
fact_caching_timeout=86400

# (pathspec) Colon separated paths in which Ansible will search for collections content. Collections must be in nested *subdirectories*, not directly in these directories. For example, if ``COLLECTIONS_PATHS`` includes ``~/.ansible/collections``, and you want to add ``my.collection`` to that directory, it must be saved as ``~/.ansible/collections/ansible_collections/my/collection``.
collections_path=content/collections

# (pathspec) Colon separated paths in which Ansible will search for Action Plugins.
action_plugins=plugins/action

# (pathspec) Colon separated paths in which Ansible will search for Cache Plugins.
cache_plugins=plugins/cache

# (pathspec) Colon separated paths in which Ansible will search for Callback Plugins.
callback_plugins=plugins/callback

# (pathspec) Colon separated paths in which Ansible will search for Cliconf Plugins.
cliconf_plugins=plugins/cliconf

# (pathspec) Colon separated paths in which Ansible will search for Connection Plugins.
connection_plugins=plugins/connection

# (pathspec) Colon separated paths in which Ansible will search for Jinja2 Filter Plugins.
filter_plugins=plugins/filter

# (string) This setting controls the default policy of fact gathering (facts discovered about remote systems).
# This option can be useful for those wishing to save fact gathering time. Both 'smart' and 'explicit' will use the cache plugin.
gathering=explicit

# (pathlist) Comma separated list of Ansible inventory sources
inventory=environments/dev/inventory

# (path) File to which Ansible will log on the controller. When empty logging is disabled.
log_path=./ansible.log

# (pathspec) Colon separated paths in which Ansible will search for Lookup Plugins.
lookup_plugins=plugins/lookup

# (pathspec) Colon separated paths in which Ansible will search for Modules.
library=plugins/modules

# (pathspec) Colon separated paths in which Ansible will search for Netconf Plugins.
netconf_plugins=plugins/netconf

# (boolean) Makes role variables inaccessible from other roles.
# This was introduced as a way to reset role variables to default values if a role is used more than once in a playbook.
private_role_vars=False

# (pathspec) Colon separated paths in which Ansible will search for Roles.
roles_path=content/roles

# (pathspec) Colon separated paths in which Ansible will search for Strategy Plugins.
strategy_plugins=plugins/strategy

# (pathspec) Colon separated paths in which Ansible will search for Terminal Plugins.
terminal_plugins=plugins/terminal

# (pathspec) Colon separated paths in which Ansible will search for Jinja2 Test Plugins.
test_plugins=plugins/test

# (integer) This is the default timeout for connection plugins to use.
timeout=10

# (pathspec) Colon separated paths in which Ansible will search for Vars Plugins.
vars_plugins=plugins/vars

# (boolean) Toggle to control the showing of deprecation warnings
deprecation_warnings=True

# (boolean) Normally ``ansible-playbook`` will print a header for each task that is run. These headers will contain the name: field from the task if you specified one. If you didn't then ``ansible-playbook`` uses the task's action to help you tell which task is presently running. Sometimes you run many of the same action and so you want more information about the task to differentiate it from others of the same action. If you set this variable to True in the config then ``ansible-playbook`` will also include the task's arguments in the header.
# This setting defaults to False because there is a chance that you have sensitive values in your parameters and you do not want those to be printed.
# If you set this to True you should be sure that you have secured your environment's stdout (no one can shoulder surf your screen and you aren't saving stdout to an insecure file) or made sure that all of your playbooks explicitly added the ``no_log: True`` parameter to tasks which have sensitive values See How do I keep secret data in my playbook? for more information.
display_args_to_stdout=False

# (boolean) Toggle to control displaying skipped task/host entries in a task in the default callback
display_skipped_hosts=True

# (boolean) Toggle to allow missing handlers to become a warning instead of an error when notifying.
error_on_missing_handler=True

# (boolean) Set this to "False" if you want to avoid host key checking by the underlying tools Ansible uses to connect to the host
host_key_checking=False

# (bool) This adds the custom stats set via the set_stats plugin to the default output
show_custom_stats=True

# (boolean) Allows disabling of warnings related to potential issues on the system running ansible itself (not on the managed hosts)
# These may include warnings about 3rd party packages or other conditions that should be resolved if possible.
system_warnings=True

# (list) Accept list for variable plugins that require it.
vars_plugins_enabled=host_group_vars,community.sops.sops

[connection]
# (boolean) This is a global option, each connection plugin can override either by having more specific options or not supporting pipelining at all.
# Pipelining, if supported by the connection plugin, reduces the number of network operations required to execute a module on the remote server, by executing many Ansible modules without actual file transfer.
# It can result in a very significant performance improvement when enabled.
# However this conflicts with privilege escalation (become). For example, when using 'sudo:' operations you must first disable 'requiretty' in /etc/sudoers on all managed hosts, which is why it is disabled by default.
# This setting will be disabled if ``ANSIBLE_KEEP_REMOTE_FILES`` is enabled.
pipelining=True
